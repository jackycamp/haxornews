{"version":3,"sources":["fonts/Press_Start_2P/PressStart2P-Regular.ttf","fonts/Titillium_Web/TitilliumWeb-Regular.ttf","fonts/index.js","api/index.js","api/Api.js","Story.js","TopStories.js","Loading.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["createGlobalStyle","PressStartRegular","TitilliumWeb","API","topStories","fetch","base_url","then","response","json","data","catch","error","item","id","this","StoryWrapper","styled","div","Header","Title","Score","Details","Author","Time","Url","ChevronRight","FaAngleRight","ChevronDown","FaAngleDown","OpenStory","FaShareAlt","Comments","CommentIcon","FaComment","Default","props","by","score","kids","time","title","url","descendants","console","log","useState","showDetails","setShowDetails","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedDate","substr","onClick","e","stopPropagation","window","open","openStory","StoryContainer","stories","map","story","Wrapper","Spin","keyframes","LoadingIcon","AiOutlineLoading3Quarters","Nav","NavItem","setStories","setTotalStories","loading","setLoading","getStories","a","length","temp","i","storyIndex","storyId","push","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3923f612.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PressStart2P-Regular.5f45b521.ttf\";","export default __webpack_public_path__ + \"static/media/TitilliumWeb-Regular.522ebad2.ttf\";","import { createGlobalStyle } from 'styled-components';\n\nimport PressStartRegular from './Press_Start_2P/PressStart2P-Regular.ttf';\nimport TitilliumWeb from './Titillium_Web/TitilliumWeb-Regular.ttf';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'PressStartRegular';\n        src: local('PressStartRegular'),\n        url(${PressStartRegular}) format('truetype')\n    }\n    @font-face {\n        font-family: 'TitilliumWeb';\n        src: local('TitiliumWeb'),\n        url(${TitilliumWeb}) format('truetype')\n    }\n`;","import Api from './Api';\n\nconst API = new Api();\n\nexport {\n    API\n}","export default class Api {\n    constructor(){\n        this.base_url = 'https://hacker-news.firebaseio.com/v0/';\n    }\n    topStories = () => (\n        fetch(this.base_url + 'topstories.json?print=pretty')\n        .then((response) => response.json())\n        .then((data) => {\n            return data;\n        })\n        .catch((error) => error)\n    )\n\n    item = (id) => (\n        fetch(`${this.base_url}item/${id}.json?print=pretty`)\n        .then((response) => response.json())\n        .then((data) => {\n            return data;\n        })\n        .catch((error) => error)\n    )\n}","import React, {useState} from 'react';\nimport {FaAngleRight, FaAngleDown, FaShareAlt, FaComment} from 'react-icons/fa';\nimport styled from 'styled-components';\n\nconst StoryWrapper = styled.div`\n    font-family: 'TitilliumWeb';\n    padding: 1rem;\n    background-color: #0c0c0d; \n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    /* border: 2px solid white; */\n    :hover{\n        background-color: #161617;\n    }\n`;\n\nconst Header = styled.div`\n    display: flex;\n    padding: 1rem;\n`;\n\nconst Title = styled.div`\n    font-size: 1.3rem;\n    flex-basis: 90%;\n    color: green;\n`;\n\nconst Score = styled.div`\n    flex-basis: 10%;\n    text-align: right;\n    color: grey;\n`;\n\nconst Details = styled.div`\n    display: flex;\n    margin-left: 5rem;\n    /* padding: 1rem; */\n    /* height: 2rem; */\n`;\n\nconst Author = styled.div`\n    /* flex-basis: 10%; */\n    color: green;\n`;\n\nconst Time = styled.div`\n    margin: 0 1rem 0 1rem;\n    color: green;\n`;\n\nconst Url = styled.div`\n    color: green;\n    /* :hover {\n        color: grey;\n    } */\n`;\n\nconst ChevronRight = styled(FaAngleRight)`\n    padding-right: 0.5rem;\n    padding-bottom: 0.5rem;\n    font-size: 1.75rem;\n    margin-right: 0.25rem;\n    color: green;\n`;\n\nconst ChevronDown = styled(FaAngleDown)`\n    padding-right: 0.5rem;\n    padding-bottom: 0.5rem;\n    font-size: 1.75rem;\n    margin-right: 0.25rem;\n    color: green;\n`;\n\nconst OpenStory = styled(FaShareAlt)`\n    margin: 0 1rem 0 1rem;\n    color: green;\n    &:hover {\n        color: white;\n    }\n`;\n\nconst Comments = styled.div`\n    margin: 0 1rem 0 1rem;\n    color: green;\n`;\n\nconst CommentIcon = styled(FaComment)`\n    color: green;\n    :hover{\n        color: grey;\n        cursor: pointer;\n    }\n`;\n\nexport default function Default(props){\n    const {id, by, kids, score, time, title, url, descendants} = props;\n    console.log('Story props: ', props);\n    const [showDetails, setShowDetails] = useState(false);\n\n    const openStory = (e) => {\n        e.stopPropagation();\n        window.open(url, '', 'width=700,height=800,resizable=yes,top=0,left=800');\n\n    };\n    \n    const date = new Date(time * 1000);\n    const hours = date.getHours();\n    const minutes = '0' + date.getMinutes();\n    const seconds = '0' + date.getSeconds();\n    const formattedDate = `${hours}:${minutes.substr(-2)}:${seconds.substr(-2)}`;\n\n    return (\n        <StoryWrapper onClick={() => setShowDetails(!showDetails)}>\n        <Header>\n            {showDetails && (<ChevronDown />)}\n            {!showDetails && ( <ChevronRight />)}\n            <Title>\n                {title}\n            </Title>\n            <Url>\n                    <OpenStory onClick={(e) => {openStory(e)}}/>\n            </Url>\n            <Score>\n                {score}\n            </Score>\n        </Header>\n        {showDetails && (\n            <Details>\n                {by && (\n                    <Author>\n                        Author: {by}\n                    </Author>\n                )}\n                {time && (\n                    <Time>\n                        When: {formattedDate}\n                    </Time>\n                )}\n                <Comments>\n                    {(descendants) ? descendants : 0}\n                    {' '}\n                    <CommentIcon />\n                </Comments>\n\n                {/* <Url>\n                    <OpenStory onClick={(e) => {openStory(e)}}/>\n                </Url> */}\n            </Details>\n        )}\n    </StoryWrapper>\n    );\n\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Story from './Story';\n\nconst StoryContainer = styled.div`\n    margin-top: 0.5rem;\n`;\n\nexport default function Default(props){\n    const {stories} = props;\n\n    return(\n        <StoryContainer>\n            {stories.map((story) => (\n                        <StoryContainer key={story.id}>\n                            <Story {...story} />\n                        </StoryContainer>\n                    ))}\n        </StoryContainer>\n    );\n\n\n}","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\n\nconst Wrapper = styled.div`\n    text-align: center;\n    padding-top: 5rem;\n`;\nconst Spin = keyframes`\n    from{\n        transform:rotate(0deg);\n    }\n    to{\n        transform:rotate(360deg);\n    }\n`;\n\nconst LoadingIcon = styled(AiOutlineLoading3Quarters)`\n    font-size: 5rem;\n    color: green;\n    animation: ${Spin} 1s infinite;\n`;\n\n\nexport default function Default(){\n\n    return(\n\n        <Wrapper>\n            <LoadingIcon />\n        </Wrapper>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport {API} from './api';\nimport TopStories from './TopStories';\nimport Loading from './Loading';\n\nconst Wrapper = styled.div`\n    padding: 1rem;\n`;\n\nconst Nav = styled.div`\n    display: flex;\n`;\n\nconst NavItem = styled.div`\n    font-family: 'PressStartRegular';\n    color: green;\n    font-size: 0.75rem;\n    padding: 1rem;\n    :hover {\n        color: white;\n        cursor: pointer;\n    }\n`;\n\nconst Header = styled.div`\n    font-family: 'PressStartRegular';\n    color: green;\n    padding: 0.25rem;\n    font-size: 2rem;\n`;\n\nconst DevInfo = styled.div`\n    font-size: 1rem;\n    padding: 0.25rem;\n    color: green;\n`;\n\nexport default function Default(){\n    const [stories, setStories] = useState([]);\n    const [totalStories, setTotalStories] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const getStories = async () => {\n        const stories = await API.topStories();\n        setTotalStories(stories.length);\n        const temp = [];\n\n        let i = 0;\n        for (let storyIndex in stories){\n            const storyId = stories[storyIndex];\n            const story = await API.item(storyId);\n            temp.push(story);\n\n            i++;\n\n            if(i >= 40){\n                break;\n            }\n\n        }\n        setStories(temp);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        getStories();\n    }, [])\n    \n    return(\n        <>\n            <Wrapper>\n                <Nav>\n                    <Header>\n                        Haxornews\n                    </Header>\n                    <NavItem>\n                        Top\n                    </NavItem>\n                    <NavItem>\n                        New\n                    </NavItem>\n                    <NavItem>\n                        Best\n                    </NavItem>\n                    <NavItem>\n                        Jobs\n                    </NavItem>\n                    <NavItem>\n                        Info\n                    </NavItem>\n\n                </Nav>\n                    {/* <DevInfo>\n                        Total Stories: {totalStories}\n                        {' '}\n                        Stories displaying: {stories.length}\n                    </DevInfo> */}\n                    {loading && (\n                        <Loading />\n                    )}\n                    {!loading && (\n                        <TopStories stories={stories}/>\n                    )}\n            </Wrapper>\n        </>\n    );\n}","import './App.css';\nimport GlobalFonts from './fonts';\nimport Main from './Main';\n\n\nfunction App() {\n  return (\n    <>\n      <GlobalFonts />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}